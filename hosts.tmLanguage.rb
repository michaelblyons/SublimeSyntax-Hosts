#!/usr/bin/env ruby

require 'erb'

# == IPv4 ==

# for this purpose, a byte is simply any number from 0 to 255
# regular expressions are not the most straightforward way of describing these but that is what we have to do
BYTE = '(' +
  [ "(25[0-5])",     # 250 to 255
    "(2[0-4][0-9])", # 200 to 249
    "(1[0-9][0-9])", # 100 to 199
    "([1-9][0-9])",  # 10 to 99
    "[0-9]",         # 0 to 9
  ].join('|') + ')'

IP_V4 = "(#{BYTE}\\.){3}#{BYTE}" # an IPv4 address: 4 bytes separated by dots

# == IPv4 private address space ==

# any number from 16 to 31
SIXTEEN_TO_THIRTYONE = "((1[6-9])|(2[0-9])|(3[0-1]))"

PRIVATE_IP_V4 = [
    "10(\\.#{BYTE}){3}", # 10.x.x.x
    "172\\.#{SIXTEEN_TO_THIRTYONE}(\\.#{BYTE}){2}", # 172.16.0.0 - 172.31.255.255
    "192\\.168(\\.#{BYTE}){2}" # 192.169.x.x
  ].map { |addr| "(#{addr})" }.join('|')

LOOPBACK_IP_V4 = "127(\\.#{BYTE}){3}" # 127.x.x.x

# == IPv6 ==

# Luckily David M. Syzdek already did the hard work and we can use it here
# http://stackoverflow.com/a/17871737/852657
#
# If you ever need to change these regexps, take care with reordering the array.
# It is really easy to make a mistake and quite hard to figure out why things don't work like intended.
SEGMENT = "[0-9a-fA-F]{1,4}"
IP_V6 = [
    "::(ffff(:0{1,4}){0,1}:){0,1}#{IP_V4}",     # ::255.255.255.255  ::ffff:255.255.255.255  ::ffff:0:255.255.255.255 (IPv4-mapped IPv6 addresses and IPv4-translated addresses)

    "fe80:(:#{SEGMENT}){0,4}\%[0-9a-zA-Z]{1,}",  # fe80::7:8%eth0     fe80::7:8%1  (link-local IPv6 addresses with zone index)

    "(#{SEGMENT}:){7,7}#{SEGMENT}",             # 1:2:3:4:5:6:7:8
    ":((:#{SEGMENT}){1,7}|:)",                  # ::2:3:4:5:6:7:8    ::2:3:4:5:6:7:8  ::8       ::
    "(#{SEGMENT}:){1,4}:#{IP_V4}",              # 2001:db8:3:4::192.0.2.33  64:ff9b::192.0.2.33 (IPv4-Embedded IPv6 Address)
    "#{SEGMENT}:((:#{SEGMENT}){1,6})",          # 1::3:4:5:6:7:8     1::3:4:5:6:7:8   1::8
    "(#{SEGMENT}:){1,2}(:#{SEGMENT}){1,5}",     # 1::4:5:6:7:8       1:2::4:5:6:7:8   1:2::8
    "(#{SEGMENT}:){1,3}(:#{SEGMENT}){1,4}",     # 1::5:6:7:8         1:2:3::5:6:7:8   1:2:3::8
    "(#{SEGMENT}:){1,4}(:#{SEGMENT}){1,3}",     # 1::6:7:8           1:2:3:4::6:7:8   1:2:3:4::8
    "(#{SEGMENT}:){1,5}(:#{SEGMENT}){1,2}",     # 1::7:8             1:2:3:4:5::7:8   1:2:3:4:5::8
    "(#{SEGMENT}:){1,6}:#{SEGMENT}",            # 1::8               1:2:3:4:5:6::8   1:2:3:4:5:6::8
    "(#{SEGMENT}:){1,7}:",                      # 1::                                 1:2:3:4:5:6:7::
  ].map { |variant| "(#{variant})" }.join('|')

LOOPBACK_IP_V6 = "::1"

# == render the tmLanguage file ==

# binding gives the template access to all local variables
File.open(File.basename(__FILE__, '.rb'), 'w') do |file|
  file.puts ERB.new(DATA.read).result(binding)
end

__END__
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>fileTypes</key>
  <array>
    <string>hosts</string>
  </array>

  <key>name</key>
  <string>Hosts File</string>

  <key>patterns</key>

  <!-- The regular expressions in these patterns have been generated by a program. It would be ridiculously hard to edit them by hand -->
  <array>
    <dict>
      <key>comment</key>
      <string>Comments, anything after a #</string>
      <key>name</key>
      <string>comment.line.hosts</string>
      <key>match</key>
      <string>#.*$</string>
    </dict>

    <!-- a different color for localhost -->
    <dict>
      <key>comment</key>
      <string>Loopback address like 127.0.0.1</string>
      <key>match</key>
      <string><%= LOOPBACK_IP_V4 %>|<%= LOOPBACK_IP_V6 %></string>
      <key>name</key>
      <string>support.type.built-in.loopback.hosts</string>
    </dict>

    <!-- a different color for local IP addresses -->
    <dict>
      <key>comment</key>
      <string>Private IPv4-address like 10.0.0.1</string>
      <key>match</key>
      <string><%= PRIVATE_IP_V4 %></string>
      <key>name</key>
      <string>string.other.hosts</string>
    </dict>

    <dict>
      <key>comment</key>
      <string>IPv4-address</string>
      <key>match</key>
      <string><%= IP_V4 %></string>
      <key>name</key>
      <string>constant.numeric.hosts</string>
    </dict>

    <dict>
      <key>comment</key>
      <string>IPv6-address</string>
      <key>match</key>
      <string><%= IP_V6 %></string>
      <key>name</key>
      <string>constant.numeric.hosts</string>
    </dict>

    <dict>
      <key>comment</key>
      <string>hostname</string>
      <key>match</key>
      <string>[\w\.]*</string>
      <key>name</key>
      <string>constant.variable.hosts</string>
    </dict>
  </array>

  <key>scopeName</key>
  <string>text.hosts</string>

  <key>uuid</key>
  <string>ecd32622-b5c9-11e4-bfd8-6c4008b851aa</string>
</dict>
</plist>
